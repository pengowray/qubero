"templatation"
view, edit, create java bytecode + automation

"""get it working first
get it right later
"""

for v0.1
 - sequential + recursive + random access + dependant + compression definitions of parts of file (xml defintion)
 - scoped type definition with inheritance
 - external main definition file
 - hex display 
 - highlighting of parts (outline) and errors (red)
 - display: tree of parts
 - table of constants
 - names for chunks, types
 - array/table numbering systems
 - search / jump
 - text only display

for v0.2
 - expandable view (.jar, compressed bits)
 - more file formats
 - more views
 - more chunk types
 - less java dependant?

initial chunk types to support:
 - internal types: template references
 - internal types: variables (defined within/from the template)
 - java bytecode types (edit and display): int, long, reference, etc.
 - java types: char, short, boolean, unicode
 -  http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html
   class file types: u1, u2, u4, 
   infos: cp_info, field_info, method_info, attribute_info
   arrays: count then array
   magic numbers: (eg OxCAFEBABE)
   flags (w/ conflict rules)
   Fully Qualified Class and Interface Names "java/lang/String"
   Descriptors (4.3)
 - table of constants
 - xml: types and stuff at least
 - python's pickled objects

future versions:
 - evidence based error checking (well it doesn't have xyz, but the abcs are in order...)
 - links and soft copies of referenced specs (+ evidence based "broken" links)
 - multi-threaded loading: jump ahead of current part being parsed when possible
 - partial/background loading: only load what's displayed (large files especially)
 - XML editor
 - standard (and non-standard) methods of conversion between types
 - rules: (e.g. uniqueness)
 - simultaneous versions / instances
 - partial locking (or loading just what isn't locked)
 - lambda
 - java convention checker
 - java security awareness
 - parse .java files too?
 - Extended Backus-Naur Form (EBNF) notation support
 - mame images and sounds!
 - excel types + formats + equations
 - python types
 - different javascript styles
 - self describing document -> .exe / .class / applet / javascript
 - human language guessing
 - gif / jpg / png
 - flash
 - javadoc viewer/editor!
 - decompiler (nasm.octium.net / intel.com / x86.org)

programs to obsolete:
 - notepad + wordpad
 - kde's hex editor
 - vim, etc
 - oracle
 - new locus
 - outlook
 - excel

silly stuff:
 - xmodem end-escape sequence fixing
 - ansi music! 

embrace and obsolete:
 AXE (Advanced Hex Editor 2.0 from Kahei Co)
    
 - Views: Graphical (bitmap)
 - resizable bytes-per-row (shows number as you stretch it)
 - Search for graphics?
 - operations (eg subtract, modulo, shift, binary-or, invert...)
 - find regularities in the data
 - search
 - base converter utility
 - Continued obsoleteness: XStruct.ini (via support for .ini files + dynamic structure creation)

HT http://hte.sourceforge.net/status.htm
 - File Formats: PE, ELF, COFF, LE, MZ, NE
 - Entropy info
 - Code analyser
 - paste to file
 - show clipboard
 - Views: console/cursors/"TurboVision-like" (= Borland's Text-app Lib)
 - multiple views (per file)
 - view list 
 - Future: A archives, LX, M$, OBJ...)
 - Future: search/replace/regex

BIEW http://biew.sourceforge.net/en/biew.html
 - similar to HT? same codebase?
 - replace/use: TDUMP, EXEHDR, DUMPEXE, NewExe Disasm, 
 - "also quite good text viewer with russian codepage convertor"

hexworkshop.com
 - Checksum-8...64, CRC-16, CRC-16 CCITT, CRC-32, MD2/4/5, SHA1
 - Date, DOS Time/Date, time_t, binary...
 - red highlighting of changed data
 - character filters: ASCII, DOS, EBCDIC, Macintosh, Window, and Unicode character set
 - output to customizable hex dumps, RTF, HTML, Java, C (MN: java/c choose for size or readability (mixed hex+strings?) or maintainability (eg function to put it together?) or set format)
 - drag and drop
 - physical disk editing
 - mutli-level undo
 - operations: Byte Flip, ~, <<, >>, ~, |, &, +/-, +, -, *, /, % 
 - "Paste Special"
 - binary compare between files
 - View Character Distributions and export results 
 - Util/help: character tables, data-types and ranges
 - command line options (readonly, offset, select)

ben's suggestions:
 - replace large area with "0x20" or a pattern, etc
 - postscript / pdf
 - shockwave flash, asn1 (multiple spec)
 - asn1 -> c
 - 40-bit rc4
 - ** search for this: iso-3309 (www.iso.ch browse product store, 35.100.20)
 - russian fbi fed pdf 
 - bus: streaming data
 - mpeg4 (for dad)

qi gong