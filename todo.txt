moojasm todo.txt

"templatation"
binary data modelling spreadsheet and database.
the photoshop of hex editors.
view, edit, create java bytecode + automation

"""get it working first
get it right later
start working now
"""

Log started Aug 21 2002:
 2002-08-21: Added types (int only for now)
             Added grey mode
             Corrected ascent bug.. characters were at wrong Y position
 2002-08-22: Fixed scrolling units (goes in whole characters now)
             Fixed main JFrame size bug
             Introduced some other drawing bugs
             Made jar'ing batch file
 2002-08-23: almost fixed drawing problems
 2002-08-24: fixed drawing problems.
             fixed window sizing issues
 2002-08-25: start (simple) input box
             updated: moojtree structure.txt
 2002-08-26: big file support (of length long)
             created "demo file" for startup
             mooj icon
 2002-08-27  int edit box now displays
 2002-08-28  int edit box now handles (4byte 2s_comp) ints properly :)
 2002-08-29  int edit box now handles any sized int, any complement
             new selection: auto open up tree
             tree has sections again
 2002-08-31  rename: RawDataSelection -> TransparentData
             removed class: Chunk
             rename: SimpleFileChunk -> SmallFileData
             rename: DemoFileChunk -> DemoData
             rename: FileChunk -> LargeFileData
             rename: NewFileData -> EmptyData
 2002-09-01  edit mode!
             new ShiftedData
             new DiffData, starting to work.
 2002-09-04  debugging edit mode
             SelectionResource now more important. Selections can be any data.
             new Cursor type
             new DefaultSelectionResource
 2002-09-05  debugged!
             ShiftedData now works on large files at good speed too
 2002-09-06  Intresource setValue from string
 2002-09-07  Can really edit Int's now
 2002-09-10  Save As (slightly buggy?)
 2002-09-11  FontMetricsCache + start new drawing algorithms (LinePanel/HexPanel)
 ...
 2002-10-14  "Splash" screen (for FontMentricsCaching)
             LineRepeater complete (but faulty)
 2002-10-30  HexTable now displays with units aligned nicely (kinda)
 2002-11-09  HexTable selection now selects in the right shape
 2002-11-10  created DefaultLongListSelectionModel / LongListSelectionModel / LongListSelectionEvent / LongListSelectionListener
             selection now triggers events (as before)
 2002-11-18  SelectionData created. various other fixes.
 2002-11-19  Compiles/Runs again. lots of xxx's to fix.
 2002-11-25  SegmentalLongListSelectionModel finally complete (little debugging needed still)

see also:
 - C:\My Documents\notes-ideas+todo\hexeditor.txt

priority/immediate features:
 - get old stuff working again
 - make DefaultLongListSelectionModel really "long".
 - EDIT hex / ascii
 - put HexTables together to make them long too (combined with UnifiedSelectionModel)
 - MULTIPLE_INTERVAL_SELECTION editing modes:
    fixed length
    overflow mode (+ overflow / length indicators / combined overflow indicator / string terminator)
    block pattern
 - background "color"/pattern: revealed when holes are made or new stuff added
 - new long demo: blocks of 8 bytes of the first byte's address.
 - save
 - undo
 - layers
 - ascii as unicode
 - duplicate hex (copy/paste)
 - error messages / throw exceptions
 - screen updates when needed (after updates)
 - calculate int min + max
 - proper definitions
 - major refactoring (layers, editing policy)
 - save/open template definitions
 - make all menus work
 - documentation + read me
 - status messages
 - multiple documents open (mdi-ish)
 - clean up xxx's
 - clean up demo file code
 - "show System.out" in a window (menu option)
 - rename "get" methods that don't really "get"(?)
 - selection data is not verified.

UI to do:
 - only double click should select in tree
 - allow right click on hex area
 - show selection on ascii side as a hollow box
 - highlighting colour scheme
 D*when right clicking a (non-selected) item on tree, show a dotted outline selection
 - DnD tree elements
 - select a template area by clicking it on the hex side
 - header lines (eg "1 Megabyte", "10 Megabytes", or "1st Megabyte"?)

bugs:
 - column widths calculations
 - making an integer smaller shouldn't (automatically) reduce its byte count
 - changing the size of an integer SHOULD change its DEFINED size too (and not just grow/shrink the board)
 - require warnings and options for both of the above. (including an option to only have, say, 4 and 8 byte ints and not 5)
 - Save as does not ask "Are you sure?" for overwrite
 - non-file does not throw exception [FileChunk]
 - Break resources don't "delete" properly.. sends wrong Category type.
 - fix bug: rename of item destroys it
 - "negative zero" for one's comp and sign magnitude
 - overlap of lines on very big files:
   Bug ID: 4707774 Graphics.drawString( String, int, int ) not precise for large ints
   http://developer.java.sun.com/developer/bugParade/bugs/4707774.html

for v0.2
 - sequential + recursive + random access + dependant + compression definitions of parts of file
 - defintion -> xml -> definition
 - scoped type definition with inheritance
 - external main definition file
D hex display
 - highlighting of parts (outline) and errors (red)
D display: tree of parts
 - table of constants
 - names for chunks, types
 - array/table numbering systems
 - search / jump
 - text only display
 - overview/summary view: show whole file as one screen w/ areas of text/binary/etc
 - subsection editing (e.g. only display one definition or range)
 - backup files as .diff + save changes as diff (or patch and .reg files or cvs or rcs)
 - ASS (altered state server).

for v0.3
 - use java.nio ByteBuffer + Channels
 - "command line" commands / macros
 - keyboard editing (no mouse)
 - expandable view (.jar, compressed bits)
 - more file formats
 - views
 - more data/resource types
 - less java dependant?
 - hex edit clipboard

initial chunk types to support:
 - internal types: template references
 - internal types: variables (defined within/from the template)
 - java bytecode types (edit and display): int, long, reference, etc.
 - java types: char, short, boolean, unicode
 -  http://java.sun.com/docs/books/vmspec/2nd-edition/html/ClassFile.doc.html
   class file types: u1, u2, u4,
   infos: cp_info, field_info, method_info, attribute_info
   arrays: count then array
   magic numbers: (eg 0xCAFEBABE)
   flags (w/ conflict rules)
   Fully Qualified Class and Interface Names "java/lang/String"
   Descriptors (4.3)
 - table of constants
 - xml + schema: types, patterns, restrictions, enumerations, list types, unions, etc.
 - python's pickled objects
 - truncated types (last 8 bits of a 32-bit float?)
 - Math.BigNumber
 - roman numerals (ascii and unicode)
 - regex's + regex helper + tr (unix) +
 - DataBuffer's special unsigned types
 - stacks, and other standard structures + stack equiv's
 - [file/data] sizes (kb / mb / other powers of 1024)
 - partial byte ints (e.g. 3 bit int)
 - from Chunk.java: recordset, Flags, NarrativeSequence, OverviewDisplayChunk
 - end of line: PC (0D 0A), Mac, Unix, [IBM Mainframe's] NEL (0D 85), Unicode line separator character (#x2028),
 - metadata descriptors: uninitialized data, null, Reserved, bad (sector), unknown, loading, cached/offline, (un)synchronized, copy, linked, unformatted,
 
future versions:
 - evidence based error checking (well it doesn't have xyz, but the abcs are in order...)
 - links and soft copies of referenced specs (+ evidence based "broken" links)
 - pdf, html, xml for above
 - multi-threaded loading: jump ahead of current part being parsed when possible
 - partial/background loading: only load what's displayed (large files especially)
 - XML editor
 - standard (and non-standard) methods of conversion between types
 - rules: (e.g. uniqueness)
 - simultaneous versions / instances
 - partial locking (or loading just what isn't locked)
 - lambda
 - java convention checker
 - java comment editor (preserve ** boxes + wrap)
 - java security awareness
 - file location + surrounding files as part of definition (metadata)
 - new english words for hex. Wunex, Texo, Treex, Forx, Fivex, Sixer .. Aten, Blev, Curlve, Dirxeen, Exorte, Fixte, Texan (ten is bigger in texas)
 - design new characters for hex (incorporating roman numerals, x's, japanese, and standard arabic)
 - OCR for dvd and tv subtitles and screen captures
 - OCR for taxes(?), books, etc
 - OCR for musical notation
 - allow pipes to mooj. e.g:   dir | mooj.exe
 - monitor files + show changes.. help working out file formats
 - treat filename and path as part of the file's data (metadata)
 - get data off the web
 - sequencer (allow triplets in 4/4)
 - database connectivity
 - self describing document -> .exe / .class / .jar / applet / javascript
 - natural language guessing
 - sort data
 - template + datasource merges
 - web service (upload file to display as hex.html or hex.gif)
 - very large file support for all formats!
 - currency
 - ICL / RMI
 - Conflict Resolution wizard
 - projects
 - "Previews" of transformations
 - file system analysis (e.g. "this looks like a windows install disk")
 - character map
 - photoshop plugins
 - qbit/quantum calculations.
 - i18n
 - find by change -- e.g. save game cheats. allow checksum style operations for large files to allow fast checks (less overhead) but more steps in narrowing down (i.e. did this region change, we'll just watch it next time) how would this work? i'm not sure.
 - rewrite mooj with itself
 - plugin architecture
 - external editors (via command line)
 - altered state server (ASS): aka. flattening file server. display .mooj files as flat files via ftp/nfs
 - artificial neural network patterns
 - complex numbers, real/imaginary
 - typical cryptography operations and symbols (xor?)
 - masks / serial numbers (e.g xxx-xxxx-xxx). Stored with and without the -'s.
 - C strings (escaped).. \n \t \\ etc \nnn \xHH \cx
 - knuth-compatible (everything in art of programming)
 - database tables / ER diagrams
 - comms tools: share templates, search. p2p.
 - patent destroyer: patented algorithm search (from old software, pre-dating the patent)
 - format template as plain text, suitable for email / usenet
 - tree-based "diffdata" for random insertion
 - <wli> (1) functional models (e.g. Haskell) (2) logic models (e.g. Prolog/Mercury) (3) string models (e.g. SNOBOL) (4) object models (e.g. Smalltalk) (5) state machine models (e.g. Charity)
   <wli> (1) functional models are useful for reasoning, metareasoning, and pure computation
   <wli> (2) logic models are useful for automated search, metareasoning, proof, and logic computations
   <wli> (3) string models are useful for string manipulation and character-oriented stimulus-response patterns that are aggregated into patterns
   <wli> (4) object models are useful for stimulus response patterns subdividable into specific inter-object message transmissions and layered decomposition
   <wli> (5) state machine models are most useful for asynchronous message reception and complex but flat structured message reception + state transition models.

future formats:
 - plain text
 - parse .java files too?
 - java tracestack messages/details
 - .jad : text/vnd.sun.j2me.app-descriptor
 - Extended Backus-Naur Form (EBNF) notation support
 - mame images and sounds!
 - excel types + formats + equations
 - python types + pickle + ZODB (oodb)
 - different javascript styles
 - gif / jpg / png / psd / corel
 - rar / zip / jar / ace / bz2 / lzh / lzw / lzx / tar / z / gzip / cpio / ar / compress / pack
 - encrypted files (pgp, etc)
 - LaTeX
 - flash
 - javadoc viewer/editor!
 - decompiler (nasm.octium.net / intel.com / x86.org / linux: nm / ld / as )
 - various flashroms
 - virus detection/definitions (e.g. norton)
 - configuration files (.ini + unix, including new quota files)
 - DVD + subtitles + VCD (.VCD, .DAT)
 - fat12/fat16 (ask rob_ert.. or ww). Fat32, NTFS, EXT2, etc.
 - CIF Easy CD Creator image
 - ISO: the ISO 9660 CD-ROM file system standard
 - CD pit predictor. See where data would physically lay on a burnt CD.
 - CD Sculpter: Also burn coasters with a picture of Tux sculpted from short and long pits
 - resource fork (mac) .RS_
 - b-trees [eks's homepage: http://void-core.2y.net/ ]
 - comms app histories (icq data / irc logs / outlook / eudora / lotus / etc)
 - midi + kar + mod + other musical notations
 - w3c: CSS, DOM, HTTP, URL/URI, SVG, SMIL, SOAP, XLink, XFORMS...
 - weights and measures (metric->imperial,dB,etc)
 - web logs
 - email address + email format + news
 - fonts! ttf, etc.
 - windows registry
 - standard schedule/calendar format?
 - Comma-delimited ASCII file
 - CER / CRT Certificate file (MIME x-x509-ca-cert)
 - wordnet files, microsoft/wordperfect/openoffice/molliza/linux (sq) dictionary files
 - opencyc.org / cyc.com KB
 - DLL(Dynamic-link library file)
 - DST Embroidery machines graphic file
 - HEX Macintosh BinHex 2.0 file
 - LWZ Linguistically enhanced sound file (Microsoft)  ??
 - more file extensions: http://whatis.techtarget.com/fileFormatA/
 - MOV Movie / QuickTime
 - ms office / openoffice / oasis / doc / rtf / etc
 - RTF Rich Text Format document
 - VCF Virtual card file
 - database types (oracle, postgres, etc)
 - PNM is a image file format, it can encode truecolor images (PPM), grayscale images (PGM) and black/white ones (PBM) (unix)
 - dna sequences: GFF: http://www.sanger.ac.uk/Software/formats/GFF/GFF_Spec.shtml
 - dna: GDB: http://gdb.wehi.edu.au/gdb/gdbDataModel.html ?
 - dna sequences: CAF, Read Naming
 - dna: Acedb, Genotator (richer formats?), HMMER, EXBLX, GeneWise, GCG (scan/tandem)
 - core dumps: <gremlin> -rw-------  1 grem  grem   503140352 Jun  5 18:17 tcsh.core
 - windows .url, .lnk, .pif
 - google search: format specification document
 - GUIDO Music Notation Format
 - Generic Diff Format Specification
 - Gettext (.po) catalogs [poEdit]
 - key map (telemate, mame)
 - fax data
 - bar codes (even as graphics) + link to product information
 - Various Mime Types (esepcially as in java.awt.datatransfer.DataFlavor)
 - various game maps (whatever's popular near release date)
 - mobile phone sim cards
 - linux packages: rpm, deb, src, tgz(tar.gz,dpak,pkg), apt-rpm, jbl, uhu
   http://distrowatch.planetmirror.com/stats.php
 - EDI Electronic Data Interchange
   http://www.ietf.org/rfc/rfc3335.txt
 - vga memory map
 - existing file indexes (view + use) e.g. unix locate, fast find, glimps,
 - all programming languages!
 - boardgames / puzzles / chess / space invaders
 - electronics
 - sql / define tables / rows / columns / transactions
 - plant/animal/biological taxonomies
 - command line arguments parsing / options / generic argv + args parser / --help generator
 - objdump
 - POV-ray
 - library dewey decimal
 - output from unix 'od', 'nl',

priority programs to obsolete:
 - notepad + wordpad
 - kde's hex editor
 - vi, emacs
 - excel + calc (check out calc's java api stuff)
 - leo [literate programming]`

other programs to obsolete:
 - office
 - oracle
 - new locus
 - outlook
 - telemate
 - windows
 - everything

projects to synergise with:
 - wine
 - linux / bsd
 - reiserFS / namesys
 - compression utilities (share libraries if possible)

silly/fun stuff:
 - xmodem end-escape sequence fixing
 - modem init string
 - ansi music!
 - ansi animation / 2400 emulation
 - DOS logs (xxx: how to add "invisible" timestamps?)
 - how much does that number resemble someone randomly hitting the keyboard
   [Miffy: NSA-STD 102328292302    TTY logging of remote user commands with time stamps.]
 - old text modes (with colours and symbols and codes): C64, ZX81, Spectrum, Apple ][...
 - backwards filter
 - data format used by maths lego page: (LDRAW .DAT)
   http://www.lipsons.pwp.blueyonder.co.uk/mathlego.htm
   work out 3x1 piece blocks for it too
 - fractals
 - geometry (n-dimensional)
 - chemistry! (atoms/compounds/ions...)
 - speak the hex (naturally. calc time between sounds, record each sound in 3-4 different positions, place emphasis on chosen parts)
 - pi, the constant, as a "pseudo" large file, scroll to any point. Viewable as ascii numbers or as base-2. maybe only base-2. might be too slow too.
 - morse code

embrace and obsolete:
 AXE (Advanced Hex Editor 2.0 from Kahei Co)
 - Views: Graphical (bitmap)
 - resizable bytes-per-row (shows number as you stretch it)
 - Search for graphics?
 - operations (eg subtract, modulo, shift, binary-or, invert...)
 - find regularities in the data
 - search
 - base converter utility
 - Continued obsoleteness: XStruct.ini (via support for .ini files + dynamic structure creation)

HT http://hte.sourceforge.net/status.htm
 - File Formats: PE, ELF, COFF, LE, MZ, NE
 - Entropy info
 - Code analyser
 - paste to file
 - show clipboard
 - Views: console/cursors/"TurboVision-like" (= Borland's Text-app Lib)
 - multiple views (per file)
 - view list
 - Future: A archives, LX, M$, OBJ...)
 - Future: search/replace/regex

BIEW http://biew.sourceforge.net/en/biew.html
 - similar to HT? same codebase?
 - replace/use: TDUMP, EXEHDR, DUMPEXE, NewExe Disasm,
 - "also quite good text viewer with russian codepage convertor"

hexworkshop.com
 - Checksum-8...64, CRC-16, CRC-16 CCITT, CRC-32, MD2/4/5, SHA1, mn: ECC (memory)
 - Date, DOS Time/Date, time_t, binary...
 - red highlighting of changed data
 - character filters: ASCII, DOS, EBCDIC, Macintosh, Window, and Unicode character set
 - output to customizable hex dumps, RTF, HTML, Java, C (MN: java/c choose for size or readability (mixed hex+strings+comments?) or maintainability (eg function to put it together?) or set format or for NetBeans, IDE-editor-style, so editing must be done in Mooj)
 - drag and drop
 - physical disk editing
 - mutli-level undo
 - operations: Byte Flip, ~, <<, >>, ~, |, &, +/-, +, -, *, /, %
 - "Paste Special"
 - binary compare between files
 - View Character Distributions and export results
 - Util/help: character tables, data-types and ranges
 - command line options (readonly, offset, select)

ben's suggestions:
 - replace large area with "0x20" or a pattern, etc
 - postscript / pdf
 - shockwave flash
 - asn1 (multiple spec)
 - asn1 -> c
 - 40-bit rc4
 - iso-3309 (www.iso.ch browse product store, 35.100.20) -- cannot find
 - russian fbi fed pdf
 - bus: streaming data
 - mpeg4 (for dad)
 - WGS 84 (Earth coordinates) (how about melways refs too!)
 - divx
 - externalist set of ontological enumerations
 - openGL stuff
 - DMG mac(?) Disk Image file

soel's idea:
 - financial transactions (linked to revolving bank account), video game style
 - cogs, mechanical engineering, toys, jewellery design...

^Lister^ is Meeeeeowth@vw10579.iprimus.net.au * The Slob Who Walks
^Lister^ on @#Dark_Thoughts @#m
 2002-09-06 austnet
  - <^Lister^> ne1 know a program i can use to interpret xpi files?
  - <pengo_brainrot> xpi?
  - <^Lister^> xp install files
  - <^Lister^> XPInstall Install type

wossname is wossname@HSE-QuebecCity-ppp81867.qc.sympatico.ca * seb
wossname on #osdev #asm #assembler #nasm #kagezpro #cprogramming #fluffichan #dunder #codeleft #ypn
 2002-09-07 opn
 - <wossname> a self-disassembling bootsector is what the world needs
 - <pengo> wossname: i'll add that to my features list

data modelling tools + terms:
 - http://datamodel.org/

other projects / pages:
 - Memory Pool System: http://www.ravenbrook.com/project/mps/
 - http://tunes.org/files/papers/Arrow_Introduction_v8.htm
 - http://www.nu2.nu/bootcd/
 - http://wouter.fov120.com/proglang/index.html  -- graphical languages
 - http://ll2.ai.mit.edu/
 - http://www.informatik.tu-darmstadt.de/TI/LiDIA/ (anticommercial maths library)
 - http://xanadu.com.au/
 - http://kos.enix.org/docs.php?lang=en

show off by:
 - winning: http://icfpcontest.cse.ogi.edu/ in 2003
 - getting slashdotted: e.g. compilation of mini-os's (with bochs + hex viewer + cd masterer) or for just being cool.
 - (graphical) shell

make money with:
 - donations (to encourage open sourcing)
 - mp3 editor (and ogg)
 - reason thing
 - live media stream control
 - web database tool (database, w3c standards, ass, ACLs)
 - jasm environment
 - logistics database (Barcode, ocr, database, cash register, library...)
 - document automation tool
 - xml editor
 - altered state server (ASS)
 - communications software
 - telecommunications software
 - dual licence
 - contract work
 - sell a book
